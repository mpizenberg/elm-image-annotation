-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0. If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/


module Pointer
    exposing
        ( Event(..)
        , Pointer
        , Track(..)
        , updateTrack
        , offset
        , touchOffsetOn
        , movement
        , offsetOn
        , movementOn
        , askTime
        )

{-| This module aims at giving helper functions to deal with pointer events.

@docs Event, Pointer, Track, updateTrack, offset, movement
@docs offsetOn, touchOffsetOn, movementOn
@docs askTime
-}

import Html exposing (Html)
import Helpers.Events as Events
import Time exposing (Time)
import Task exposing (Task)
import OpenSolid.Geometry.Types exposing (Point2d(..))


{-| Events generated by a pointer device.
-}
type Event
    = Down
    | Move
    | Up
    | Cancel


{-| A Pointer.
-}
type alias Pointer =
    { event : Event
    , offsetX : Float
    , offsetY : Float
    , movementX : Float
    , movementY : Float
    }


{-| Track the first and last pointer events.
-}
type Track
    = None
    | Started Pointer
    | Moved Pointer Pointer


{-| Update a record track with a new pointer event.
-}
updateTrack : Pointer -> Track -> Track
updateTrack pointer track =
    case ( pointer.event, track ) of
        ( Down, _ ) ->
            Started pointer

        ( Move, Started start ) ->
            Moved start pointer

        ( Move, Moved start _ ) ->
            Moved start pointer

        _ ->
            None


{-| Returns (offsetX, offsetY).
-}
offset : Pointer -> ( Float, Float )
offset pointer =
    ( pointer.offsetX, pointer.offsetY )


{-| Returns (movementX, movementY).
-}
movement : Pointer -> ( Float, Float )
movement pointer =
    ( pointer.movementX, pointer.movementY )



-- HTML POINTER ATTRIBUTES ###########################################


{-| Returns offsetOn attribute.
-}
offsetOn : String -> Event -> (Pointer -> msg) -> (( Float, Float ) -> ( Float, Float )) -> Html.Attribute msg
offsetOn eventName event tagger transform =
    Events.offsetOn eventName <| tagger << fromOffset event << transform


{-| Returns touchOffsetOn attribute.
-}
touchOffsetOn : String -> Event -> (Pointer -> msg) -> (( Float, Float ) -> ( Float, Float )) -> Html.Attribute msg
touchOffsetOn eventName event tagger transform =
    (tagger << fromOffset event << transform)
        |> Events.computedTouchOffsetOn eventName


{-| Returns movementOn attribute.
-}
movementOn : String -> Event -> (Pointer -> msg) -> (( Float, Float ) -> ( Float, Float )) -> Html.Attribute msg
movementOn eventName event tagger transform =
    Events.movementOn eventName <| tagger << fromMovement event << transform


fromOffset : Event -> ( Float, Float ) -> Pointer
fromOffset event ( offsetX, offsetY ) =
    { event = event
    , offsetX = offsetX
    , offsetY = offsetY
    , movementX = 0
    , movementY = 0
    }


fromMovement : Event -> ( Float, Float ) -> Pointer
fromMovement event ( movementX, movementY ) =
    { event = event
    , offsetX = 0
    , offsetY = 0
    , movementX = movementX
    , movementY = movementY
    }



-- HTML TIME ATTRIBUTES ##############################################


{-| Use a message maker (tagger) to create a command message giving Time.now.
-}
askTime : (Time -> msg) -> Cmd msg
askTime msgMaker =
    Task.perform msgMaker Time.now
